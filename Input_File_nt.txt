######################################################
#             1D Heat Conduction Solver              #
#              Created by J. Mark Epps               #
#          Part of Masters Thesis at UW 2018-2020    #
######################################################

############### INPUT FILE #########################
#    Reference directions:
#    left-smallest x coordinate
#    right-largest x value

######################################################
#			Settings
#	Properties are in standard units J, kg, K, W, m
#	k,Cp,rho: [value]; for 'rho', is TMD or actual density
#	k,Cp,rho: eta,[value when eta=0],[value when eta=1]
#	rho,Cp: spec (calculate based on species mass fractions)
#	Porosity: percentage of domain that is porous
#	pore_gas: Air or Ar; gas that is present in pores
#	gas_constant: specific gas constant for that species (for ideal gas law); J/kg/K
######################################################

Length:0.003
Nodes_x:600
#rho:5109
rho:spec
#rho:1523
#rho:eta,5643,7191
#Cp:625
Cp:eta,601,998
#Cp:spec
#k:eta,39,108
k:65
Darcy_mu:1e-5
Particle_diam:40e-9
Porosity:0.6
pore_gas:Air
gas_constant:107.93
#81.51 For alumina, 107.93 alumina and copper, 208.11 for Ar, 

######################################################
#			Source terms
#	Source_uniform: specify volumetric heating in W/m^3 or None
#	Source_Kim: True or None
#	Ea: J/mol, A0 [unit depends]
#	dH: form [vol or rho],[value]; is volume or mass based enthalpy
#	Ignition: Condition to remove flux BC in form [variable],[variable threshold]
#		where [variable] can be eta or Temp
#	gas_gen: percentage of thermite converted to gas
######################################################

Source_Uniform:None
Source_Kim:True
Ea:48000
A0:4.89e6
dH:rho,2.78e6
Ignition:eta,0.8
#Ignition:Temp,1200
gas_gen:0.343

#  Al/CuO: 4.07e6 [density], 2.38e6 [after Al,Alumina,Cu phase changes], 2.78e6 [after Al2O3,Cu phase changes]
#  Al/MoO3- dH=4.7e6
# A0= 2200000000, 4.89e6
# Ea= 48000 (40nm), 70000 (100nm), 170000 (2-3um); 60000 (~70nm)

######################################################
#			Species data
#	Species: Indicate species chemical formula separated by commas
#	Specie_IC: Initial densities of each species in order specified in 'Species'
#	Sepcie_Cp: Specific heats of each species in order specified in 'Species'
#	Commenting this section out will remove mass/momentum transfer from model
######################################################

#Species:Al,CuO,Al_2O_3,Cu
Species:g,s
Specie_IC:0,5109
#Specie_rho:1.1,3065
#Specie_Cp:1100,600
#Specie_Cv:800,600

######################################################
#			Meshing details
#	Currently not available
#Biasing options:
#    -'OneWayUp'   for linearly increasing element sizes with increasing x/y
#    -'OneWayDown' for linearly decreasing element sizes with increasing x/y
#    -'TwoWayEnd'  for linearly increasing sizes till middle, then decrease again
#    -'TwoWayMid'  for linearly decreasing sizes till middle, then increase again
#    -size         is the smallest element size based on above selection
######################################################

bias_type_x:None
bias_size_x:0.003

######################################################
#			Time advancement details
#	'Fo' (in (0, 1.0)) OR 'dt' must be specified; if both are, then smallest will be used; Fo stability check to 1.0
#	'Fo' in (0,1.0) for planar, (0, 50.0) for axisymmetric (experimentally determined for this code)
#	'total_time_steps' OR 'total_time' must be specified; if both, then 'total_time_steps' will be used
#	Time schemes: Explicit OR Strang_split [IN PROGRESS]
#	'Convergence' and 'Max_iterations' are for implicit solver
#	Number_Data_Output: Number of T variable files to be output over the time/number of steps specified
#	'Restart': None OR a number sequence in T data file name (will restart at this time)
######################################################

Fo:0.05
#dt:0.00000001
dt:1e-10
#dt:None
total_time_steps:None
#total_time:None
total_time:3e-4
Time_Scheme:Explicit
Restart:None

Convergence:0.0001
Max_iterations:100

Number_Data_Output:5

######################################################
#			Boundary conditions
# Format: [type of BC], [values for BC], [first node #], [last node #]
#	[first node #]-first node number to apply BC; 0 based index; must be positive
#	[last node #] -last node number to apply BC; must be negative/relative to last node; node-Nodes_x
#		Mulitple BCs can be specified along a boundary; separate everything with commas;
#	e.g. F, 1000, 0,-10,C,10,300,10,-1
# Energy options:
#	[type of BC]  -T or F for const. temp or flux; each requires one value for [values for BC]
#	[type of BC]  -C for convective BC; requires conv. HT coeff AND T_infty for [values for BC]
# Mass options:
#	[type of BC]  -grad_P for mass flux based on Pressure; value of P_infty for [values for BC]
# Pressure options:
#	[type of BC]  -grad for pressure gradient; value of gradient for [values for BC]
#  [IN PROGRESS] Profiles possible; must be same size as number of nodes on that boundary
# [IN PROGRESS] Radiation options: None or [emissivity, surrounding_Temp]
######################################################

bc_left_E:F, 200e6, 0, -1
bc_right_E:C, 30, 300, 0, -1
# numpy.linspace(400, 900, settings['Nodes_y'])

bc_left_rad:None
bc_right_rad:None

#bc_left_mom:
#bc_right_mom:

bc_left_P:grad,0,0,-1
bc_right_P:grad,0,0,-1

#bc_left_mass:grad_P,0,0,-1
#bc_right_mass:grad_P,0,0,-1

bc_left_mass:grad,0,0,-1
bc_right_mass:grad,0,0,-1
